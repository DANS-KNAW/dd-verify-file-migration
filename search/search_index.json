{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"dd-verify-migration \u00b6 SYNOPSIS \u00b6 dd-verify-migration { server | check | load-from-dataverse } ... DESCRIPTION \u00b6 Database for comparing expected and actual files and datasets after migration to data station. ARGUMENTS \u00b6 positional arguments: {server,check,load-from-dataverse} ... positional arguments: {server,check,load-from-dataverse} available commands named arguments: -h, --help show this help message and exit -v, --version show the application version and exit EXAMPLES \u00b6 dd-verify-migration load-from-dataverse INSTALLATION AND CONFIGURATION \u00b6 Currently, this project is built as an RPM package for RHEL7/CentOS7 and later. The RPM will install the binaries to /opt/dans.knaw.nl/dd-verify-migration and the configuration files to /etc/opt/dans.knaw.nl/dd-verify-migration . For installation on systems that do no support RPM and/or systemd: Build the tarball (see next section). Extract it to some location on your system, for example /opt/dans.knaw.nl/dd-verify-migration . Start the service with the following command opt/dans.knaw.nl/dd-verify-migration/bin/dd-verify-migration server \\ /opt/dans.knaw.nl/dd-verify-migration/cfg/config.yml The file /opt/dans.knaw.nl/dd-verify-migration/cfg/account-substitutes.csv will be delivered with just a header line. The content of the file should equal the substitution file configured for easy-convert-bag-to-deposit . To ignore substitution for testing purposes: add just one line with identical values in both columns. BUILDING FROM SOURCE \u00b6 Prerequisites: Java 11 or higher Maven 3.3.3 or higher RPM Steps: git clone https://github.com/DANS-KNAW/dd-verify-migration.git cd dd-verify-migration mvn clean install If the rpm executable is found at /usr/local/bin/rpm , the build profile that includes the RPM packaging will be activated. If rpm is available, but at a different path, then activate it by using Maven's -P switch: mvn -Pprm install . Alternatively, to build the tarball execute: mvn clean install assembly:single","title":"Manual"},{"location":"#dd-verify-migration","text":"","title":"dd-verify-migration"},{"location":"#synopsis","text":"dd-verify-migration { server | check | load-from-dataverse } ...","title":"SYNOPSIS"},{"location":"#description","text":"Database for comparing expected and actual files and datasets after migration to data station.","title":"DESCRIPTION"},{"location":"#arguments","text":"positional arguments: {server,check,load-from-dataverse} ... positional arguments: {server,check,load-from-dataverse} available commands named arguments: -h, --help show this help message and exit -v, --version show the application version and exit","title":"ARGUMENTS"},{"location":"#examples","text":"dd-verify-migration load-from-dataverse","title":"EXAMPLES"},{"location":"#installation-and-configuration","text":"Currently, this project is built as an RPM package for RHEL7/CentOS7 and later. The RPM will install the binaries to /opt/dans.knaw.nl/dd-verify-migration and the configuration files to /etc/opt/dans.knaw.nl/dd-verify-migration . For installation on systems that do no support RPM and/or systemd: Build the tarball (see next section). Extract it to some location on your system, for example /opt/dans.knaw.nl/dd-verify-migration . Start the service with the following command opt/dans.knaw.nl/dd-verify-migration/bin/dd-verify-migration server \\ /opt/dans.knaw.nl/dd-verify-migration/cfg/config.yml The file /opt/dans.knaw.nl/dd-verify-migration/cfg/account-substitutes.csv will be delivered with just a header line. The content of the file should equal the substitution file configured for easy-convert-bag-to-deposit . To ignore substitution for testing purposes: add just one line with identical values in both columns.","title":"INSTALLATION AND CONFIGURATION"},{"location":"#building-from-source","text":"Prerequisites: Java 11 or higher Maven 3.3.3 or higher RPM Steps: git clone https://github.com/DANS-KNAW/dd-verify-migration.git cd dd-verify-migration mvn clean install If the rpm executable is found at /usr/local/bin/rpm , the build profile that includes the RPM packaging will be activated. If rpm is available, but at a different path, then activate it by using Maven's -P switch: mvn -Pprm install . Alternatively, to build the tarball execute: mvn clean install assembly:single","title":"BUILDING FROM SOURCE"},{"location":"dev/","text":"Development \u00b6 This page contains information for developers about how to contribute to this project. Set-up \u00b6 This project can be used in combination with dans-dev-tools . Before you can start it as a service some dependencies must first be started: HSQL database \u00b6 Open a separate terminal tab: start-hsqldb-server.sh dd-dtap \u00b6 The service needs a Dataverse instance to talk to. For this you can use dd-dtap (only accessible to DANS developers): start-preprovisioned-box -s After start-up: vagrant ssh curl -X PUT -d s3kretKey http://localhost:8080/api/admin/settings/:BlockedApiKey curl -X PUT -d unblock-key http://localhost:8080/api/admin/settings/:BlockedApiPolicy dd-verify-migration \u00b6 Open a separate terminal and cd to the dd-verify-migration : start-env.sh Configure the correct API key in the created etc/config.yml . start.sh load-from-dataverse","title":"Dev"},{"location":"dev/#development","text":"This page contains information for developers about how to contribute to this project.","title":"Development"},{"location":"dev/#set-up","text":"This project can be used in combination with dans-dev-tools . Before you can start it as a service some dependencies must first be started:","title":"Set-up"},{"location":"dev/#hsql-database","text":"Open a separate terminal tab: start-hsqldb-server.sh","title":"HSQL database"},{"location":"dev/#dd-dtap","text":"The service needs a Dataverse instance to talk to. For this you can use dd-dtap (only accessible to DANS developers): start-preprovisioned-box -s After start-up: vagrant ssh curl -X PUT -d s3kretKey http://localhost:8080/api/admin/settings/:BlockedApiKey curl -X PUT -d unblock-key http://localhost:8080/api/admin/settings/:BlockedApiPolicy","title":"dd-dtap"},{"location":"dev/#dd-verify-migration","text":"Open a separate terminal and cd to the dd-verify-migration : start-env.sh Configure the correct API key in the created etc/config.yml . start.sh load-from-dataverse","title":"dd-verify-migration"}]}